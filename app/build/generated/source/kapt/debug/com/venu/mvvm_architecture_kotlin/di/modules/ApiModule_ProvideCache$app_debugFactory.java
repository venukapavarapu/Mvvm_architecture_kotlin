// Generated by Dagger (https://dagger.dev).
package com.venu.mvvm_architecture_kotlin.di.modules;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideCache$app_debugFactory implements Factory<Cache> {
  private final ApiModule module;

  private final Provider<Application> applicationProvider;

  public ApiModule_ProvideCache$app_debugFactory(ApiModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Cache get() {
    return provideCache$app_debug(module, applicationProvider.get());
  }

  public static ApiModule_ProvideCache$app_debugFactory create(ApiModule module,
      Provider<Application> applicationProvider) {
    return new ApiModule_ProvideCache$app_debugFactory(module, applicationProvider);
  }

  public static Cache provideCache$app_debug(ApiModule instance, Application application) {
    return Preconditions.checkNotNull(instance.provideCache$app_debug(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
