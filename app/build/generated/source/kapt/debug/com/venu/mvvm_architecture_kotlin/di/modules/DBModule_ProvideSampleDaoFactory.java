// Generated by Dagger (https://dagger.dev).
package com.venu.mvvm_architecture_kotlin.di.modules;

import com.venu.mvvm_architecture_kotlin.data.room.dao.SampleDao;
import com.venu.mvvm_architecture_kotlin.data.room.db.DBHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_ProvideSampleDaoFactory implements Factory<SampleDao> {
  private final DBModule module;

  private final Provider<DBHelper> databaseProvider;

  public DBModule_ProvideSampleDaoFactory(DBModule module, Provider<DBHelper> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public SampleDao get() {
    return provideSampleDao(module, databaseProvider.get());
  }

  public static DBModule_ProvideSampleDaoFactory create(DBModule module,
      Provider<DBHelper> databaseProvider) {
    return new DBModule_ProvideSampleDaoFactory(module, databaseProvider);
  }

  public static SampleDao provideSampleDao(DBModule instance, DBHelper database) {
    return Preconditions.checkNotNull(instance.provideSampleDao(database), "Cannot return null from a non-@Nullable @Provides method");
  }
}
