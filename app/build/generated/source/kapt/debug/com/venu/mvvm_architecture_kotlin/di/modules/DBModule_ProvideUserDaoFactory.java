// Generated by Dagger (https://dagger.dev).
package com.venu.mvvm_architecture_kotlin.di.modules;

import com.venu.mvvm_architecture_kotlin.data.room.dao.UserDao;
import com.venu.mvvm_architecture_kotlin.data.room.db.DBHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_ProvideUserDaoFactory implements Factory<UserDao> {
  private final DBModule module;

  private final Provider<DBHelper> databaseProvider;

  public DBModule_ProvideUserDaoFactory(DBModule module, Provider<DBHelper> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public UserDao get() {
    return provideUserDao(module, databaseProvider.get());
  }

  public static DBModule_ProvideUserDaoFactory create(DBModule module,
      Provider<DBHelper> databaseProvider) {
    return new DBModule_ProvideUserDaoFactory(module, databaseProvider);
  }

  public static UserDao provideUserDao(DBModule instance, DBHelper database) {
    return Preconditions.checkNotNull(instance.provideUserDao(database), "Cannot return null from a non-@Nullable @Provides method");
  }
}
